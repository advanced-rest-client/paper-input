/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   paper-textarea.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../iron-a11y-announcer/iron-a11y-announcer.d.ts" />
/// <reference path="../iron-validatable-behavior/iron-validatable-behavior.d.ts" />
/// <reference path="paper-input-container.d.ts" />
/// <reference path="paper-input-behavior.d.ts" />
/// <reference path="paper-input-error.d.ts" />

declare namespace AnypointElements {

  /**
   * `<paper-textarea>` is a multi line text input styled for the Anypoint platform
   * as a Polymer powered web component
   *
   * ### Example
   *
   * ```html
   * <paper-textarea></paper-textarea>
   * ```
   *
   * ### Styling
   *
   * See `anypoint-text-container` for styling options.
   */
  class PaperTextarea extends
    Polymer.PaperInputBehavior(
    Polymer.IronValidatableMixin(
    Polymer.Element)) {
    readonly _focusableElement: any;
    value: string|null|undefined;
    _ariaDescribedBy: string|null|undefined;
    _ariaLabelledBy: string|null|undefined;
    readonly _patternRegExp: any;

    /**
     * The initial number of rows.
     */
    rows: number|null|undefined;
    _patternAlreadyChecked: boolean|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _ariaLabelledByChanged(ariaLabelledBy: any): void;
    _ariaDescribedByChanged(ariaDescribedBy: any): void;
    _onInput(): void;
    _checkPatternValidity(): any;
    _announceInvalidCharacter(message: any): void;
    _onKeypress(event: any): void;
    _isPrintable(event: any): any;
  }
}

interface HTMLElementTagNameMap {
  "paper-textarea": AnypointElements.PaperTextarea;
}
