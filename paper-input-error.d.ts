/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   paper-input-error.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../iron-overlay-behavior/iron-overlay-behavior.d.ts" />
/// <reference path="../anypoint-styles/colors.d.ts" />
/// <reference path="../anypoint-styles/typography.d.ts" />

declare namespace AnypointElements {

  /**
   * The `<paper-input-error>` is a container for an error message or list of validation
   * rules if the input element uses `validator`s.
   *
   * ### Styling
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--paper-input-error-container` | Mixin applied to the element | `{}`
   * `--paper-input-error-border-color` | Border color of the popover | `--anypoint-color-aluminum3`
   * `--paper-input-error-left-border` | Color of the right border of the popover | `--anypoint-color-steel4`
   * `--anypoint-text-container-invalid-color` | Color of error messages and borders when corresponding form control is invalid | `--anypoint-color-danger`
   * `--paper-input-error-message-size` | Font size of the validation message. | `12px`
   */
  class PaperInputError extends
    Polymer.IronOverlayBehavior(
    Polymer.Element) {

    /**
     * An error message to display. This should be used when native validators are used
     */
    errorMessage: string|null|undefined;

    /**
     * A property bind to `<anypoint-input>`'s `invalid` property.
     * Should be used for both `errorMessage` and `validationStates`.
     */
    invalid: boolean|null|undefined;

    /**
     * A property that should be bind to `<anypoint-input>`'s `validationStates` property.
     * This property is set by the `Anypoint.AnypointValidatableBehavior`.
     */
    validationStates: any[]|null|undefined;

    /**
     * A property that should be bind to `<anypoint-input>`'s `focused` property. Should be
     * used when using `validationStates`
     */
    focused: boolean|null|undefined;
    noCancelOnOutsideClick: boolean|null|undefined;

    /**
     * A list of messages to display at a time.
     */
    _messages: Array<String|null>|null;

    /**
     * Renders an error message based on `errorMessage` property.
     */
    _renderMessage(errorMessage: any, invalid: any): void;

    /**
     * Renders the list of validation messages based on the `validationStates` property
     */
    _renderList(invalid: any, focused: any, record: any): void;
  }
}

interface HTMLElementTagNameMap {
  "paper-input-error": AnypointElements.PaperInputError;
}
